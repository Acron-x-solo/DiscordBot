import discord
from discord import app_commands
from discord.ext import commands
import os
import logging
import asyncio
import aiohttp

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger('discord')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True
intents.members = True

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = commands.Bot(command_prefix='!', intents=intents)

# –ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤
TICKET_CATEGORY_NAME = "üöë„Éª–ü–û–ú–û–©–¨"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
VERIFICATION_CHANNEL_ID = None
VERIFIED_ROLE_ID = None

@bot.event
async def on_ready():
    logger.info(f'–ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
    try:
        synced = await bot.tree.sync()
        logger.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

@bot.tree.command(name="setup", description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Ç–∏–∫–µ—Ç–æ–≤")
@app_commands.checks.has_permissions(administrator=True)
async def setup(interaction: discord.Interaction):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Ç–∏–∫–µ—Ç–æ–≤"""
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤
        category = discord.utils.get(interaction.guild.categories, name=TICKET_CATEGORY_NAME)
        if category is None:
             category = await interaction.guild.create_category(TICKET_CATEGORY_NAME)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤
        channel = discord.utils.get(category.text_channels, name="—Å–æ–∑–¥–∞—Ç—å-—Ç–∏–∫–µ—Ç")
        if channel is None:
            channel = await interaction.guild.create_text_channel(
                "—Å–æ–∑–¥–∞—Ç—å-—Ç–∏–∫–µ—Ç",
                category=category
            )
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
        embed = discord.Embed(
            title="üé´ –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç",
            description="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç",
            color=discord.Color.blue()
        )
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        button = discord.ui.Button(
            style=discord.ButtonStyle.primary,
            label="–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç",
            custom_id="create_ticket"
        )
        
        view = discord.ui.View()
        view.add_item(button)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π, –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ
        async for msg in channel.history(limit=10):
            if msg.author == bot.user and msg.embeds and msg.embeds[0].title == "üé´ –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç":
                await msg.delete()
                break

        await channel.send(embed=embed, view=view)
        await interaction.response.send_message("–°–∏—Å—Ç–µ–º–∞ —Ç–∏–∫–µ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!", ephemeral=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ç–∏–∫–µ—Ç–æ–≤: {e}")
        await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ç–∏–∫–µ—Ç–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞.", ephemeral=True)

@bot.tree.command(name="close", description="–ó–∞–∫—Ä—ã—Ç—å —Ç–µ–∫—É—â–∏–π —Ç–∏–∫–µ—Ç")
async def close(interaction: discord.Interaction):
    """–ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞"""
    try:
        if not interaction.channel.name.startswith("—Ç–∏–∫–µ—Ç-"):
            await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö —Ç–∏–∫–µ—Ç–æ–≤!", ephemeral=True)
            return
        
        await interaction.response.send_message("–¢–∏–∫–µ—Ç –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...", ephemeral=True)
        await interaction.channel.delete()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞: {e}")
        await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞.", ephemeral=True)

@bot.tree.command(name="set_verification", description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏")
@app_commands.checks.has_permissions(administrator=True)
@app_commands.describe(
    channel="–ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
    role="–†–æ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω–∞ –ø–æ—Å–ª–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"
)
async def set_verification(interaction: discord.Interaction, channel: discord.TextChannel, role: discord.Role):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    global VERIFICATION_CHANNEL_ID, VERIFIED_ROLE_ID
    try:
        VERIFICATION_CHANNEL_ID = channel.id
        VERIFIED_ROLE_ID = role.id

        embed = discord.Embed(
            title="‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è",
            description="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É.",
            color=discord.Color.green()
        )

        button = discord.ui.Button(
            style=discord.ButtonStyle.success,
            label="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è",
            custom_id="verify_button"
        )

        view = discord.ui.View()
        view.add_item(button)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏, –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ
        async for msg in channel.history(limit=10):
            if msg.author == bot.user and msg.embeds and msg.embeds[0].title == "‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è":
                await msg.delete()
                break

        await channel.send(embed=embed, view=view)
        await interaction.response.send_message(f"–°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞! –ö–∞–Ω–∞–ª: {channel.mention}, –†–æ–ª—å: {role.name}", ephemeral=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.", ephemeral=True)

@bot.event
async def on_member_join(member: discord.Member):
    logger.info(f'{member.name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É.')
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    # if VERIFICATION_CHANNEL_ID:
    #     try:
    #         channel = bot.get_channel(VERIFICATION_CHANNEL_ID)
    #         if channel:
    #              await member.send(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª {channel.mention} –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.")
    #     except Exception as e:
    #         logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ {member.name}: {e}")

@bot.event
async def on_interaction(interaction: discord.Interaction):
    try:
        if interaction.type == discord.InteractionType.component and interaction.data:
            custom_id = interaction.data.get('custom_id')
            if custom_id == "create_ticket":
                # –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞
                category = discord.utils.get(interaction.guild.categories, name=TICKET_CATEGORY_NAME)
                if category is None:
                     # –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–∏–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –µ–µ
                     try:
                         category = await interaction.guild.create_category(TICKET_CATEGORY_NAME)
                     except Exception as e:
                         logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–∏–∫–µ—Ç–æ–≤: {e}")
                         await interaction.response.send_message("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤.", ephemeral=True)
                         return

                # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —Ç–∏–∫–µ—Ç–∞
                ticket_channel = await interaction.guild.create_text_channel(
                    f"—Ç–∏–∫–µ—Ç-{interaction.user.name}",
                    category=category,
                    overwrites={
                        interaction.guild.default_role: discord.PermissionOverwrite(read_messages=False),
                        interaction.user: discord.PermissionOverwrite(read_messages=True, send_messages=True),
                        interaction.guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True)
                    }
                )
                
                # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–∏–∫–µ—Ç–µ
                embed = discord.Embed(
                    title="üé´ –ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç",
                    description=f"–¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.mention}\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/close` —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç",
                    color=discord.Color.green()
                )
                
                await ticket_channel.send(embed=embed)
                await interaction.response.send_message(f"–¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω! {ticket_channel.mention}", ephemeral=True)

            elif custom_id == "verify_button":
                # –õ–æ–≥–∏–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
                if VERIFIED_ROLE_ID:
                    role = interaction.guild.get_role(VERIFIED_ROLE_ID)
                    if role:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ä–æ–ª—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        if role in interaction.user.roles:
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç—Ñ–µ–º–µ—Ä–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
                            await interaction.response.send_message("–í—ã —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã!", ephemeral=True)
                        else:
                            await interaction.user.add_roles(role)
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ
                            await interaction.response.defer(ephemeral=True) # –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å followup
                            success_message = await interaction.followup.send("–í—ã —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã!", ephemeral=False) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                            await asyncio.sleep(5) # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥
                            await success_message.delete() # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    else:
                        await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: —Ä–æ–ª—å –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", ephemeral=True)
                else:
                     await interaction.response.send_message("–°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.", ephemeral=True)


    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: {e}")
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—â–µ –Ω–µ –±—ã–ª–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
            if not interaction.response.is_done():
                 await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.", ephemeral=True)
        except:
            pass # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å

@bot.event
async def on_error(event, *args, **kwargs):
    logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Å–æ–±—ã—Ç–∏–∏ {event}: {args} {kwargs}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    TOKEN = os.getenv('TOKEN')  # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not TOKEN:
        TOKEN = "MTM3Nzg0MzU2MDUwNTY3MTgxMA.GHX1i4.U1t6f8wYBOwH0idGuS3TD-zunMKtEB8A2vxUh8"
    
    async def main():
        async with bot:
            try:
                await bot.start(TOKEN)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
                logger.info("–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥...")
                await asyncio.sleep(60)
                await main()  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
    
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏
        if not bot.is_closed():
            asyncio.run(bot.close()) 